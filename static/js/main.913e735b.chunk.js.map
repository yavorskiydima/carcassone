{"version":3,"sources":["tiles/A.png","tiles/B.png","tiles/C.png","tiles/D.png","tiles/E.png","tiles/F.png","tiles/G.png","tiles/H.png","tiles/I.png","tiles/J.png","tiles/K.png","tiles/L.png","tiles/M.png","tiles/N.png","tiles/O.png","tiles/P.png","tiles/Q.png","tiles/R.png","tiles/S.png","tiles/T.png","tiles/U.png","tiles/V.png","tiles/W.png","tiles/X.png","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","pic","A","number","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","App","useState","data","tiles","setTile","history","setHistory","tilesFree","reduce","acc","item","className","map","i","key","onClick","index","updatedTile","tile","handleClick","src","alt","slice","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.913e735b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/A.24f7e06c.png\";","module.exports = __webpack_public_path__ + \"static/media/B.ced16071.png\";","module.exports = __webpack_public_path__ + \"static/media/C.37bb1fba.png\";","module.exports = __webpack_public_path__ + \"static/media/D.065883e3.png\";","module.exports = __webpack_public_path__ + \"static/media/E.f208868e.png\";","module.exports = __webpack_public_path__ + \"static/media/F.d013df07.png\";","module.exports = __webpack_public_path__ + \"static/media/G.6b835a67.png\";","module.exports = __webpack_public_path__ + \"static/media/H.a4180961.png\";","module.exports = __webpack_public_path__ + \"static/media/I.12f6cef5.png\";","module.exports = __webpack_public_path__ + \"static/media/J.e6dbefac.png\";","module.exports = __webpack_public_path__ + \"static/media/K.206338c1.png\";","module.exports = __webpack_public_path__ + \"static/media/L.ac6af1f4.png\";","module.exports = __webpack_public_path__ + \"static/media/M.723ca665.png\";","module.exports = __webpack_public_path__ + \"static/media/N.49ecc910.png\";","module.exports = __webpack_public_path__ + \"static/media/O.06001699.png\";","module.exports = __webpack_public_path__ + \"static/media/P.1fe46312.png\";","module.exports = __webpack_public_path__ + \"static/media/Q.ca03f89e.png\";","module.exports = __webpack_public_path__ + \"static/media/R.7c219791.png\";","module.exports = __webpack_public_path__ + \"static/media/S.1bf97a69.png\";","module.exports = __webpack_public_path__ + \"static/media/T.6032ccd1.png\";","module.exports = __webpack_public_path__ + \"static/media/U.af25281e.png\";","module.exports = __webpack_public_path__ + \"static/media/V.558bdb2e.png\";","module.exports = __webpack_public_path__ + \"static/media/W.aa4b7d8e.png\";","module.exports = __webpack_public_path__ + \"static/media/X.cbd149e5.png\";","import A from './tiles/A.png';\r\nimport B from './tiles/B.png';\r\nimport C from './tiles/C.png';\r\nimport D from './tiles/D.png';\r\nimport E from './tiles/E.png';\r\nimport F from './tiles/F.png';\r\nimport G from './tiles/G.png';\r\nimport H from './tiles/H.png';\r\nimport I from './tiles/I.png';\r\nimport J from './tiles/J.png';\r\nimport K from './tiles/K.png';\r\nimport L from './tiles/L.png';\r\nimport M from './tiles/M.png';\r\nimport N from './tiles/N.png';\r\nimport O from './tiles/O.png';\r\nimport P from './tiles/P.png';\r\nimport Q from './tiles/Q.png';\r\nimport R from './tiles/R.png';\r\nimport S from './tiles/S.png';\r\nimport T from './tiles/T.png';\r\nimport U from './tiles/U.png';\r\nimport V from './tiles/V.png';\r\nimport W from './tiles/W.png';\r\nimport X from './tiles/X.png';\r\n\r\nexport default [\r\n    { pic: A, number: 2, },\r\n    { pic: B, number: 4, },\r\n    { pic: C, number: 1, },\r\n    { pic: D, number: 3, },\r\n    { pic: E, number: 5, },\r\n    { pic: F, number: 2, },\r\n    { pic: G, number: 1, },\r\n    { pic: H, number: 3, },\r\n    { pic: I, number: 2, },\r\n    { pic: J, number: 3, },\r\n    { pic: K, number: 3, },\r\n    { pic: L, number: 3, },\r\n    { pic: M, number: 2, },\r\n    { pic: N, number: 3, },\r\n    { pic: O, number: 2, },\r\n    { pic: P, number: 3, },\r\n    { pic: Q, number: 1, },\r\n    { pic: R, number: 3, },\r\n    { pic: S, number: 2, },\r\n    { pic: T, number: 1, },\r\n    { pic: U, number: 8, },\r\n    { pic: V, number: 9, },\r\n    { pic: W, number: 4, },\r\n    { pic: X, number: 1, },\r\n]","import React, { useState, } from 'react';\nimport './App.css';\nimport data from './data';\n\n\n\nfunction App() {\n  const [tiles, setTile] = useState(data);\n  const [history, setHistory] = useState([3]);\n\n  const handleClick = (index) => {\n    if (!tiles[index].number) return;\n    const updatedTile = tiles.map((tile, i) =>\n      i === index ? { ...tile, number: --tile.number, } : tile)\n    setTile(updatedTile)\n    setHistory(history => [index, ...history])\n  };\n\n  const undoClick = () => {\n    const index = history[0];\n    setHistory(history => history.slice(1));\n    setTile(tiles => tiles.map((tile, i) => i === index ? { ...tile, number: tile.number + 1 } : tile));\n  };\n\n  const tilesFree = tiles.reduce((acc, item) => acc += item.number, 0);\n\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        {tiles.map(({ pic, number, }, i) => (\n          <div className={`tile ${!!number ? '' : 'blocked'}`} key={i}>\n            <div className=\"tile__content\" onClick={() => handleClick(i)}>\n              <div className=\"tile__pic\">\n                <img src={pic} alt=\"alt\" />\n              </div>\n              <div>{number}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"history\">\n        <div className=\"menu\">\n          <div>Total: {tilesFree} (left {72 - tilesFree})</div>\n          <button onClick={undoClick}>down</button>\n        </div>\n        <div className=\"list\">\n          {history.map((item, index) => (\n            <div key={index} className=\"list___item\">\n              {history.length - index}\n              <img src={data[item].pic} alt=\"pic\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}